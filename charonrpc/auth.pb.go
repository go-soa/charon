// Code generated by protoc-gen-go. DO NOT EDIT.
// source: charonrpc/auth.proto

package charonrpc

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // Deprecated: Do not use.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // Deprecated: Do not use.
	Client   string `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	// Types that are valid to be assigned to Strategy:
	//	*LoginRequest_UsernameAndPassword
	//	*LoginRequest_RefreshToken
	Strategy             isLoginRequest_Strategy `protobuf_oneof:"strategy"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// Deprecated: Do not use.
func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetClient() string {
	if m != nil {
		return m.Client
	}
	return ""
}

type isLoginRequest_Strategy interface {
	isLoginRequest_Strategy()
}

type LoginRequest_UsernameAndPassword struct {
	UsernameAndPassword *UsernameAndPasswordStrategy `protobuf:"bytes,11,opt,name=username_and_password,json=usernameAndPassword,proto3,oneof"`
}

type LoginRequest_RefreshToken struct {
	RefreshToken *RefreshTokenStrategy `protobuf:"bytes,12,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

func (*LoginRequest_UsernameAndPassword) isLoginRequest_Strategy() {}

func (*LoginRequest_RefreshToken) isLoginRequest_Strategy() {}

func (m *LoginRequest) GetStrategy() isLoginRequest_Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (m *LoginRequest) GetUsernameAndPassword() *UsernameAndPasswordStrategy {
	if x, ok := m.GetStrategy().(*LoginRequest_UsernameAndPassword); ok {
		return x.UsernameAndPassword
	}
	return nil
}

func (m *LoginRequest) GetRefreshToken() *RefreshTokenStrategy {
	if x, ok := m.GetStrategy().(*LoginRequest_RefreshToken); ok {
		return x.RefreshToken
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*LoginRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _LoginRequest_OneofMarshaler, _LoginRequest_OneofUnmarshaler, _LoginRequest_OneofSizer, []interface{}{
		(*LoginRequest_UsernameAndPassword)(nil),
		(*LoginRequest_RefreshToken)(nil),
	}
}

func _LoginRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*LoginRequest)
	// strategy
	switch x := m.Strategy.(type) {
	case *LoginRequest_UsernameAndPassword:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UsernameAndPassword); err != nil {
			return err
		}
	case *LoginRequest_RefreshToken:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RefreshToken); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("LoginRequest.Strategy has unexpected type %T", x)
	}
	return nil
}

func _LoginRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*LoginRequest)
	switch tag {
	case 11: // strategy.username_and_password
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UsernameAndPasswordStrategy)
		err := b.DecodeMessage(msg)
		m.Strategy = &LoginRequest_UsernameAndPassword{msg}
		return true, err
	case 12: // strategy.refresh_token
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RefreshTokenStrategy)
		err := b.DecodeMessage(msg)
		m.Strategy = &LoginRequest_RefreshToken{msg}
		return true, err
	default:
		return false, nil
	}
}

func _LoginRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*LoginRequest)
	// strategy
	switch x := m.Strategy.(type) {
	case *LoginRequest_UsernameAndPassword:
		s := proto.Size(x.UsernameAndPassword)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *LoginRequest_RefreshToken:
		s := proto.Size(x.RefreshToken)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LogoutRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogoutRequest) Reset()         { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()    {}
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{1}
}

func (m *LogoutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogoutRequest.Unmarshal(m, b)
}
func (m *LogoutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogoutRequest.Marshal(b, m, deterministic)
}
func (m *LogoutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogoutRequest.Merge(m, src)
}
func (m *LogoutRequest) XXX_Size() int {
	return xxx_messageInfo_LogoutRequest.Size(m)
}
func (m *LogoutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogoutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogoutRequest proto.InternalMessageInfo

func (m *LogoutRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type IsAuthenticatedRequest struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsAuthenticatedRequest) Reset()         { *m = IsAuthenticatedRequest{} }
func (m *IsAuthenticatedRequest) String() string { return proto.CompactTextString(m) }
func (*IsAuthenticatedRequest) ProtoMessage()    {}
func (*IsAuthenticatedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{2}
}

func (m *IsAuthenticatedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsAuthenticatedRequest.Unmarshal(m, b)
}
func (m *IsAuthenticatedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsAuthenticatedRequest.Marshal(b, m, deterministic)
}
func (m *IsAuthenticatedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsAuthenticatedRequest.Merge(m, src)
}
func (m *IsAuthenticatedRequest) XXX_Size() int {
	return xxx_messageInfo_IsAuthenticatedRequest.Size(m)
}
func (m *IsAuthenticatedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsAuthenticatedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsAuthenticatedRequest proto.InternalMessageInfo

func (m *IsAuthenticatedRequest) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type IsGrantedRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Permission           string   `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsGrantedRequest) Reset()         { *m = IsGrantedRequest{} }
func (m *IsGrantedRequest) String() string { return proto.CompactTextString(m) }
func (*IsGrantedRequest) ProtoMessage()    {}
func (*IsGrantedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{3}
}

func (m *IsGrantedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsGrantedRequest.Unmarshal(m, b)
}
func (m *IsGrantedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsGrantedRequest.Marshal(b, m, deterministic)
}
func (m *IsGrantedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsGrantedRequest.Merge(m, src)
}
func (m *IsGrantedRequest) XXX_Size() int {
	return xxx_messageInfo_IsGrantedRequest.Size(m)
}
func (m *IsGrantedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsGrantedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsGrantedRequest proto.InternalMessageInfo

func (m *IsGrantedRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *IsGrantedRequest) GetPermission() string {
	if m != nil {
		return m.Permission
	}
	return ""
}

type BelongsToRequest struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId              int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BelongsToRequest) Reset()         { *m = BelongsToRequest{} }
func (m *BelongsToRequest) String() string { return proto.CompactTextString(m) }
func (*BelongsToRequest) ProtoMessage()    {}
func (*BelongsToRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{4}
}

func (m *BelongsToRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BelongsToRequest.Unmarshal(m, b)
}
func (m *BelongsToRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BelongsToRequest.Marshal(b, m, deterministic)
}
func (m *BelongsToRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BelongsToRequest.Merge(m, src)
}
func (m *BelongsToRequest) XXX_Size() int {
	return xxx_messageInfo_BelongsToRequest.Size(m)
}
func (m *BelongsToRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BelongsToRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BelongsToRequest proto.InternalMessageInfo

func (m *BelongsToRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *BelongsToRequest) GetGroupId() int64 {
	if m != nil {
		return m.GroupId
	}
	return 0
}

type ActorResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Permissions          []string `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	IsSuperuser          bool     `protobuf:"varint,6,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	IsActive             bool     `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsStuff              bool     `protobuf:"varint,8,opt,name=is_stuff,json=isStuff,proto3" json:"is_stuff,omitempty"` // Deprecated: Do not use.
	IsConfirmed          bool     `protobuf:"varint,9,opt,name=is_confirmed,json=isConfirmed,proto3" json:"is_confirmed,omitempty"`
	IsStaff              bool     `protobuf:"varint,10,opt,name=is_staff,json=isStaff,proto3" json:"is_staff,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActorResponse) Reset()         { *m = ActorResponse{} }
func (m *ActorResponse) String() string { return proto.CompactTextString(m) }
func (*ActorResponse) ProtoMessage()    {}
func (*ActorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{5}
}

func (m *ActorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActorResponse.Unmarshal(m, b)
}
func (m *ActorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActorResponse.Marshal(b, m, deterministic)
}
func (m *ActorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActorResponse.Merge(m, src)
}
func (m *ActorResponse) XXX_Size() int {
	return xxx_messageInfo_ActorResponse.Size(m)
}
func (m *ActorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActorResponse proto.InternalMessageInfo

func (m *ActorResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ActorResponse) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ActorResponse) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ActorResponse) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *ActorResponse) GetPermissions() []string {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *ActorResponse) GetIsSuperuser() bool {
	if m != nil {
		return m.IsSuperuser
	}
	return false
}

func (m *ActorResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

// Deprecated: Do not use.
func (m *ActorResponse) GetIsStuff() bool {
	if m != nil {
		return m.IsStuff
	}
	return false
}

func (m *ActorResponse) GetIsConfirmed() bool {
	if m != nil {
		return m.IsConfirmed
	}
	return false
}

func (m *ActorResponse) GetIsStaff() bool {
	if m != nil {
		return m.IsStaff
	}
	return false
}

type UsernameAndPasswordStrategy struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsernameAndPasswordStrategy) Reset()         { *m = UsernameAndPasswordStrategy{} }
func (m *UsernameAndPasswordStrategy) String() string { return proto.CompactTextString(m) }
func (*UsernameAndPasswordStrategy) ProtoMessage()    {}
func (*UsernameAndPasswordStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{6}
}

func (m *UsernameAndPasswordStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsernameAndPasswordStrategy.Unmarshal(m, b)
}
func (m *UsernameAndPasswordStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsernameAndPasswordStrategy.Marshal(b, m, deterministic)
}
func (m *UsernameAndPasswordStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsernameAndPasswordStrategy.Merge(m, src)
}
func (m *UsernameAndPasswordStrategy) XXX_Size() int {
	return xxx_messageInfo_UsernameAndPasswordStrategy.Size(m)
}
func (m *UsernameAndPasswordStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_UsernameAndPasswordStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_UsernameAndPasswordStrategy proto.InternalMessageInfo

func (m *UsernameAndPasswordStrategy) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UsernameAndPasswordStrategy) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RefreshTokenStrategy struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshTokenStrategy) Reset()         { *m = RefreshTokenStrategy{} }
func (m *RefreshTokenStrategy) String() string { return proto.CompactTextString(m) }
func (*RefreshTokenStrategy) ProtoMessage()    {}
func (*RefreshTokenStrategy) Descriptor() ([]byte, []int) {
	return fileDescriptor_7189ba2d46c2af9a, []int{7}
}

func (m *RefreshTokenStrategy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshTokenStrategy.Unmarshal(m, b)
}
func (m *RefreshTokenStrategy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshTokenStrategy.Marshal(b, m, deterministic)
}
func (m *RefreshTokenStrategy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshTokenStrategy.Merge(m, src)
}
func (m *RefreshTokenStrategy) XXX_Size() int {
	return xxx_messageInfo_RefreshTokenStrategy.Size(m)
}
func (m *RefreshTokenStrategy) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshTokenStrategy.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshTokenStrategy proto.InternalMessageInfo

func (m *RefreshTokenStrategy) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "charonrpc.LoginRequest")
	proto.RegisterType((*LogoutRequest)(nil), "charonrpc.LogoutRequest")
	proto.RegisterType((*IsAuthenticatedRequest)(nil), "charonrpc.IsAuthenticatedRequest")
	proto.RegisterType((*IsGrantedRequest)(nil), "charonrpc.IsGrantedRequest")
	proto.RegisterType((*BelongsToRequest)(nil), "charonrpc.BelongsToRequest")
	proto.RegisterType((*ActorResponse)(nil), "charonrpc.ActorResponse")
	proto.RegisterType((*UsernameAndPasswordStrategy)(nil), "charonrpc.UsernameAndPasswordStrategy")
	proto.RegisterType((*RefreshTokenStrategy)(nil), "charonrpc.RefreshTokenStrategy")
}

func init() { proto.RegisterFile("charonrpc/auth.proto", fileDescriptor_7189ba2d46c2af9a) }

var fileDescriptor_7189ba2d46c2af9a = []byte{
	// 705 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x61, 0x6f, 0xd3, 0x3a,
	0x14, 0x86, 0x6f, 0xdb, 0xad, 0x4d, 0x4f, 0xdb, 0x7b, 0x27, 0xdf, 0xdd, 0x2d, 0x37, 0x65, 0xa3,
	0x2b, 0x12, 0x9a, 0x10, 0x6a, 0xa5, 0xf1, 0x8d, 0x49, 0xa0, 0x96, 0x31, 0x28, 0x4c, 0x68, 0x4a,
	0x37, 0x3e, 0x20, 0xa4, 0xca, 0x4b, 0x9c, 0xd4, 0x5a, 0x6b, 0x07, 0xdb, 0x61, 0x1a, 0x3f, 0x06,
	0x89, 0x3f, 0xc1, 0xef, 0x43, 0x76, 0x9a, 0x34, 0xe9, 0xa6, 0x22, 0x3e, 0xfa, 0x7d, 0x73, 0x9e,
	0x9c, 0x9c, 0x9c, 0xd7, 0xb0, 0xed, 0x4d, 0xb1, 0xe0, 0x4c, 0x44, 0x5e, 0x1f, 0xc7, 0x6a, 0xda,
	0x8b, 0x04, 0x57, 0x1c, 0xd5, 0x33, 0xd5, 0x69, 0x87, 0x9c, 0x87, 0x33, 0xd2, 0x37, 0xc6, 0x55,
	0x1c, 0xf4, 0xc9, 0x3c, 0x52, 0xb7, 0xc9, 0x73, 0xce, 0xfe, 0xaa, 0x79, 0x23, 0x70, 0x14, 0x11,
	0x21, 0x13, 0xbf, 0xfb, 0xbd, 0x0c, 0xcd, 0x33, 0x1e, 0x52, 0xe6, 0x92, 0x2f, 0x31, 0x91, 0x0a,
	0xed, 0x83, 0x15, 0x4b, 0x22, 0x18, 0x9e, 0x13, 0xbb, 0xd4, 0x29, 0x1d, 0xd6, 0x87, 0x65, 0xbb,
	0xe4, 0x66, 0x9a, 0xf6, 0x23, 0x2c, 0xe5, 0x0d, 0x17, 0xbe, 0x5d, 0x5e, 0xfa, 0xa9, 0x86, 0x76,
	0xa0, 0xea, 0xcd, 0x28, 0x61, 0xca, 0xae, 0x68, 0xd7, 0x5d, 0x9c, 0xd0, 0x67, 0xf8, 0x2f, 0x65,
	0x4c, 0x30, 0xf3, 0x27, 0x19, 0xa4, 0xd1, 0x29, 0x1d, 0x36, 0x8e, 0x1e, 0xf7, 0xb2, 0x0f, 0xea,
	0x5d, 0x2e, 0x9e, 0x1b, 0x30, 0xff, 0x7c, 0xf1, 0xd4, 0x58, 0x09, 0xac, 0x48, 0x78, 0xfb, 0xf6,
	0x2f, 0xf7, 0xdf, 0xf8, 0xae, 0x8d, 0x4e, 0xa1, 0x25, 0x48, 0x20, 0x88, 0x9c, 0x4e, 0x14, 0xbf,
	0x26, 0xcc, 0x6e, 0x1a, 0xea, 0xc3, 0x1c, 0xd5, 0x4d, 0xfc, 0x0b, 0x6d, 0xe7, 0x70, 0x4d, 0x91,
	0xd3, 0x87, 0x00, 0x96, 0x5c, 0x78, 0xef, 0x36, 0xac, 0xd6, 0xd6, 0x76, 0xf7, 0x08, 0x5a, 0x67,
	0x3c, 0xe4, 0xb1, 0x4a, 0x07, 0x74, 0x00, 0x4d, 0xec, 0x79, 0x44, 0xca, 0xc5, 0x9b, 0xcc, 0x90,
	0xdc, 0x46, 0xa2, 0x19, 0x4a, 0xf7, 0x18, 0x76, 0x46, 0x72, 0x10, 0xab, 0x29, 0x61, 0x8a, 0x7a,
	0x58, 0x11, 0xff, 0x0f, 0x8a, 0xdf, 0xc3, 0xd6, 0x48, 0xbe, 0x11, 0x98, 0xe5, 0xca, 0x76, 0xa1,
	0xa6, 0xbf, 0x7a, 0x42, 0x7d, 0x53, 0x51, 0x71, 0xab, 0xfa, 0x38, 0xf2, 0xd1, 0x3e, 0x40, 0x44,
	0xc4, 0x9c, 0x4a, 0x49, 0x39, 0x4b, 0xfe, 0x87, 0x9b, 0x53, 0xba, 0xa7, 0xb0, 0x35, 0x24, 0x33,
	0xce, 0x42, 0x79, 0xc1, 0x7f, 0x0b, 0xfb, 0x1f, 0xac, 0x50, 0xf0, 0x38, 0xd2, 0x4e, 0xd9, 0x38,
	0x35, 0x73, 0x1e, 0xf9, 0xdd, 0x9f, 0x65, 0x68, 0x0d, 0x3c, 0xc5, 0x85, 0x4b, 0x64, 0xc4, 0x99,
	0x24, 0xe8, 0x6f, 0x28, 0x67, 0x80, 0x32, 0xf5, 0x91, 0x93, 0xdb, 0x9b, 0xa4, 0x8f, 0xe5, 0xce,
	0xec, 0x01, 0x04, 0x54, 0x48, 0x35, 0x31, 0x6e, 0xb2, 0x17, 0x75, 0xa3, 0x7c, 0xd0, 0x76, 0x1b,
	0xea, 0x33, 0x9c, 0xba, 0x1b, 0x49, 0xad, 0x16, 0x8c, 0xd9, 0x81, 0xc6, 0xf2, 0x7b, 0xa4, 0xbd,
	0xd9, 0xa9, 0xe8, 0x81, 0xe5, 0x24, 0x3d, 0x53, 0x2a, 0x27, 0x32, 0x8e, 0x88, 0xd0, 0x6f, 0xb4,
	0xab, 0x9d, 0xd2, 0xa1, 0xe5, 0x36, 0xa8, 0x1c, 0xa7, 0x92, 0x7e, 0x03, 0x95, 0x13, 0xec, 0x29,
	0xfa, 0x95, 0xd8, 0x35, 0xe3, 0x5b, 0x54, 0x0e, 0xcc, 0x19, 0xed, 0x81, 0xa5, 0xeb, 0x55, 0x1c,
	0x04, 0xb6, 0xa5, 0x3d, 0xb3, 0xd1, 0x35, 0x2a, 0xc7, 0x5a, 0x5a, 0xe0, 0x3d, 0xce, 0x02, 0x2a,
	0xe6, 0xc4, 0xb7, 0xeb, 0x29, 0xfe, 0x55, 0x2a, 0xe9, 0xc1, 0x19, 0x02, 0x0e, 0x02, 0x1b, 0x8c,
	0x6d, 0xaa, 0x71, 0x10, 0x74, 0x2f, 0xa1, 0xbd, 0x66, 0x9d, 0x0b, 0x53, 0x2b, 0xad, 0x4c, 0xcd,
	0x59, 0x4d, 0xda, 0x32, 0x65, 0xdd, 0x63, 0xd8, 0xbe, 0x6f, 0x9f, 0xd1, 0xa3, 0xd5, 0x1c, 0x24,
	0xd0, 0xc2, 0x92, 0x1f, 0xfd, 0xa8, 0xc0, 0x86, 0xde, 0x4e, 0xf4, 0x02, 0x36, 0x4d, 0xf6, 0xd1,
	0x6e, 0x2e, 0x27, 0xf9, 0xdb, 0xc0, 0x79, 0xd0, 0x4b, 0xee, 0x8f, 0x5e, 0x7a, 0x7f, 0xf4, 0xc6,
	0x4a, 0x50, 0x16, 0x7e, 0xc4, 0xb3, 0x98, 0xa0, 0xe7, 0x50, 0x4d, 0xb2, 0x81, 0xec, 0x22, 0x60,
	0x19, 0x17, 0x67, 0xe7, 0x0e, 0xe1, 0xb5, 0xbe, 0x9e, 0xd0, 0x39, 0xfc, 0xb3, 0x92, 0x11, 0x74,
	0x90, 0x83, 0xdc, 0x9f, 0x1f, 0xc7, 0xb9, 0x43, 0x1b, 0x72, 0x3e, 0x4b, 0xba, 0x79, 0x09, 0x9b,
	0x66, 0x45, 0xd1, 0xda, 0xa6, 0x9d, 0x7c, 0xab, 0xc5, 0x95, 0x3e, 0x81, 0x7a, 0x96, 0x3c, 0xd4,
	0x2e, 0x34, 0x53, 0xcc, 0xe3, 0xda, 0x36, 0x4e, 0xa0, 0x9e, 0x45, 0xae, 0x40, 0x59, 0x0d, 0xe2,
	0x3a, 0xca, 0xf0, 0xe9, 0xa7, 0x27, 0x21, 0x55, 0xd3, 0xf8, 0xaa, 0xe7, 0xf1, 0x79, 0x3f, 0xa2,
	0x5c, 0x89, 0x6b, 0x7e, 0x83, 0x67, 0xde, 0xb7, 0xf8, 0xba, 0x9f, 0x30, 0xfb, 0x19, 0xfa, 0xaa,
	0x6a, 0x08, 0xcf, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff, 0x14, 0x94, 0x47, 0xcd, 0x2c, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	IsAuthenticated(ctx context.Context, in *IsAuthenticatedRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	Actor(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*ActorResponse, error)
	IsGranted(ctx context.Context, in *IsGrantedRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
	BelongsTo(ctx context.Context, in *BelongsToRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Logout(ctx context.Context, in *LogoutRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/Logout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) IsAuthenticated(ctx context.Context, in *IsAuthenticatedRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/IsAuthenticated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Actor(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*ActorResponse, error) {
	out := new(ActorResponse)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/Actor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) IsGranted(ctx context.Context, in *IsGrantedRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/IsGranted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) BelongsTo(ctx context.Context, in *BelongsToRequest, opts ...grpc.CallOption) (*wrappers.BoolValue, error) {
	out := new(wrappers.BoolValue)
	err := c.cc.Invoke(ctx, "/charonrpc.Auth/BelongsTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	Login(context.Context, *LoginRequest) (*wrappers.StringValue, error)
	Logout(context.Context, *LogoutRequest) (*empty.Empty, error)
	IsAuthenticated(context.Context, *IsAuthenticatedRequest) (*wrappers.BoolValue, error)
	Actor(context.Context, *wrappers.StringValue) (*ActorResponse, error)
	IsGranted(context.Context, *IsGrantedRequest) (*wrappers.BoolValue, error)
	BelongsTo(context.Context, *BelongsToRequest) (*wrappers.BoolValue, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Logout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogoutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Logout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/Logout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Logout(ctx, req.(*LogoutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_IsAuthenticated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsAuthenticatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).IsAuthenticated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/IsAuthenticated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).IsAuthenticated(ctx, req.(*IsAuthenticatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Actor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Actor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/Actor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Actor(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_IsGranted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsGrantedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).IsGranted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/IsGranted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).IsGranted(ctx, req.(*IsGrantedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_BelongsTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BelongsToRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).BelongsTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.Auth/BelongsTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).BelongsTo(ctx, req.(*BelongsToRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "charonrpc.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "Logout",
			Handler:    _Auth_Logout_Handler,
		},
		{
			MethodName: "IsAuthenticated",
			Handler:    _Auth_IsAuthenticated_Handler,
		},
		{
			MethodName: "Actor",
			Handler:    _Auth_Actor_Handler,
		},
		{
			MethodName: "IsGranted",
			Handler:    _Auth_IsGranted_Handler,
		},
		{
			MethodName: "BelongsTo",
			Handler:    _Auth_BelongsTo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "charonrpc/auth.proto",
}

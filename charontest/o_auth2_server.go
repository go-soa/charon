// Code generated by mockery v1.0.0. DO NOT EDIT.

package charontest

import charonrpc "github.com/piotrkowalczuk/charon/charonrpc"
import context "context"
import mock "github.com/stretchr/testify/mock"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// OAuth2Server is an autogenerated mock type for the OAuth2Server type
type OAuth2Server struct {
	mock.Mock
}

// Authorization provides a mock function with given fields: _a0, _a1
func (_m *OAuth2Server) Authorization(_a0 context.Context, _a1 *charonrpc.AuthorizationRequest) (*wrappers.StringValue, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *wrappers.StringValue
	if rf, ok := ret.Get(0).(func(context.Context, *charonrpc.AuthorizationRequest) *wrappers.StringValue); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wrappers.StringValue)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charonrpc.AuthorizationRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

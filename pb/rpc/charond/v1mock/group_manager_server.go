// Code generated by mockery v1.0.0. DO NOT EDIT.

package charondmock

import charond "github.com/piotrkowalczuk/charon/pb/rpc/charond/v1"
import context "context"
import mock "github.com/stretchr/testify/mock"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// GroupManagerServer is an autogenerated mock type for the GroupManagerServer type
type GroupManagerServer struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) Create(_a0 context.Context, _a1 *charond.CreateGroupRequest) (*charond.CreateGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.CreateGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.CreateGroupRequest) *charond.CreateGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.CreateGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.CreateGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) Delete(_a0 context.Context, _a1 *charond.DeleteGroupRequest) (*wrappers.BoolValue, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *wrappers.BoolValue
	if rf, ok := ret.Get(0).(func(context.Context, *charond.DeleteGroupRequest) *wrappers.BoolValue); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*wrappers.BoolValue)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.DeleteGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) Get(_a0 context.Context, _a1 *charond.GetGroupRequest) (*charond.GetGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.GetGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.GetGroupRequest) *charond.GetGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.GetGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.GetGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) List(_a0 context.Context, _a1 *charond.ListGroupsRequest) (*charond.ListGroupsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.ListGroupsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.ListGroupsRequest) *charond.ListGroupsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.ListGroupsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.ListGroupsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListPermissions provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) ListPermissions(_a0 context.Context, _a1 *charond.ListGroupPermissionsRequest) (*charond.ListGroupPermissionsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.ListGroupPermissionsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.ListGroupPermissionsRequest) *charond.ListGroupPermissionsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.ListGroupPermissionsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.ListGroupPermissionsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Modify provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) Modify(_a0 context.Context, _a1 *charond.ModifyGroupRequest) (*charond.ModifyGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.ModifyGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.ModifyGroupRequest) *charond.ModifyGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.ModifyGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.ModifyGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetPermissions provides a mock function with given fields: _a0, _a1
func (_m *GroupManagerServer) SetPermissions(_a0 context.Context, _a1 *charond.SetGroupPermissionsRequest) (*charond.SetGroupPermissionsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *charond.SetGroupPermissionsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *charond.SetGroupPermissionsRequest) *charond.SetGroupPermissionsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*charond.SetGroupPermissionsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *charond.SetGroupPermissionsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

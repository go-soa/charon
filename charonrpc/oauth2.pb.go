// Code generated by protoc-gen-go. DO NOT EDIT.
// source: charonrpc/oauth2.proto

package charonrpc

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthorizationRequest struct {
	RefreshToken         string   `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizationRequest) Reset()         { *m = AuthorizationRequest{} }
func (m *AuthorizationRequest) String() string { return proto.CompactTextString(m) }
func (*AuthorizationRequest) ProtoMessage()    {}
func (*AuthorizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0785d60f54e9893e, []int{0}
}

func (m *AuthorizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizationRequest.Unmarshal(m, b)
}
func (m *AuthorizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizationRequest.Marshal(b, m, deterministic)
}
func (m *AuthorizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizationRequest.Merge(m, src)
}
func (m *AuthorizationRequest) XXX_Size() int {
	return xxx_messageInfo_AuthorizationRequest.Size(m)
}
func (m *AuthorizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizationRequest proto.InternalMessageInfo

func (m *AuthorizationRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type OAuth2Token struct {
	RefreshToken         string               `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AccessToken          string               `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType            string               `protobuf:"bytes,3,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Expiry               *timestamp.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OAuth2Token) Reset()         { *m = OAuth2Token{} }
func (m *OAuth2Token) String() string { return proto.CompactTextString(m) }
func (*OAuth2Token) ProtoMessage()    {}
func (*OAuth2Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_0785d60f54e9893e, []int{1}
}

func (m *OAuth2Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuth2Token.Unmarshal(m, b)
}
func (m *OAuth2Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuth2Token.Marshal(b, m, deterministic)
}
func (m *OAuth2Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuth2Token.Merge(m, src)
}
func (m *OAuth2Token) XXX_Size() int {
	return xxx_messageInfo_OAuth2Token.Size(m)
}
func (m *OAuth2Token) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuth2Token.DiscardUnknown(m)
}

var xxx_messageInfo_OAuth2Token proto.InternalMessageInfo

func (m *OAuth2Token) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *OAuth2Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *OAuth2Token) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *OAuth2Token) GetExpiry() *timestamp.Timestamp {
	if m != nil {
		return m.Expiry
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthorizationRequest)(nil), "charonrpc.AuthorizationRequest")
	proto.RegisterType((*OAuth2Token)(nil), "charonrpc.OAuth2Token")
}

func init() { proto.RegisterFile("charonrpc/oauth2.proto", fileDescriptor_0785d60f54e9893e) }

var fileDescriptor_0785d60f54e9893e = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xcf, 0x4a, 0x33, 0x31,
	0x14, 0xc5, 0x99, 0xef, 0x93, 0x42, 0xd3, 0x76, 0x13, 0x44, 0xca, 0xa0, 0xb6, 0xd6, 0x4d, 0x11,
	0x49, 0x60, 0x5c, 0xba, 0xd2, 0x07, 0x50, 0xa8, 0x45, 0xc4, 0x4d, 0x49, 0xc3, 0xed, 0x4c, 0x68,
	0x3b, 0x37, 0x26, 0x37, 0xd4, 0xf6, 0x89, 0x7c, 0x4c, 0x69, 0xd2, 0x16, 0xfc, 0xb3, 0x70, 0x39,
	0xe7, 0xfc, 0xee, 0x99, 0x9c, 0xc3, 0x4e, 0x74, 0xa5, 0x1c, 0xd6, 0xce, 0x6a, 0x89, 0x2a, 0x50,
	0x55, 0x08, 0xeb, 0x90, 0x90, 0x37, 0x0f, 0x7a, 0xde, 0x2b, 0x11, 0xcb, 0x05, 0xc8, 0x68, 0x4c,
	0xc3, 0x4c, 0x92, 0x59, 0x82, 0x27, 0xb5, 0xb4, 0x89, 0xcd, 0xcf, 0xbf, 0x03, 0x2b, 0xa7, 0xac,
	0x05, 0xe7, 0x93, 0x3f, 0xb8, 0x65, 0xc7, 0x77, 0x81, 0x2a, 0x74, 0x66, 0xa3, 0xc8, 0x60, 0x3d,
	0x82, 0xb7, 0x00, 0x9e, 0xf8, 0x25, 0xeb, 0x38, 0x98, 0x39, 0xf0, 0xd5, 0x84, 0x70, 0x0e, 0x75,
	0x37, 0xeb, 0x67, 0xc3, 0xe6, 0xa8, 0xbd, 0x13, 0xc7, 0x5b, 0x6d, 0xf0, 0x91, 0xb1, 0xd6, 0xe3,
	0xf6, 0xbc, 0x88, 0xdf, 0x7f, 0x3a, 0xe2, 0x17, 0xac, 0xad, 0xb4, 0x06, 0xef, 0x77, 0xcc, 0xbf,
	0xc8, 0xb4, 0x92, 0x96, 0x90, 0x33, 0xc6, 0xa2, 0x37, 0xa1, 0xb5, 0x85, 0xee, 0xff, 0x08, 0x34,
	0xa3, 0x32, 0x5e, 0x5b, 0xe0, 0x05, 0x6b, 0xc0, 0xbb, 0x35, 0x6e, 0xdd, 0x3d, 0xea, 0x67, 0xc3,
	0x56, 0x91, 0x8b, 0x54, 0x52, 0xec, 0x4b, 0x8a, 0xf1, 0x7e, 0x85, 0xd1, 0x8e, 0x2c, 0x5e, 0x58,
	0x23, 0xbd, 0x94, 0x3f, 0xb0, 0xce, 0x97, 0xc6, 0xbc, 0x27, 0x0e, 0x7b, 0x8a, 0xdf, 0xb6, 0xc8,
	0x4f, 0x7f, 0xe4, 0x3f, 0x91, 0x33, 0x75, 0xf9, 0xac, 0x16, 0x01, 0xee, 0xaf, 0x5f, 0xaf, 0x4a,
	0x43, 0x55, 0x98, 0x0a, 0x8d, 0x4b, 0x69, 0x0d, 0x92, 0x9b, 0xe3, 0x4a, 0x2d, 0xf4, 0x26, 0xcc,
	0x65, 0x4a, 0x96, 0x87, 0x1f, 0x4c, 0x1b, 0x31, 0xe3, 0xe6, 0x33, 0x00, 0x00, 0xff, 0xff, 0x41,
	0xba, 0x34, 0xcc, 0xdc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OAuth2Client is the client API for OAuth2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OAuth2Client interface {
	Authorization(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error)
}

type oAuth2Client struct {
	cc *grpc.ClientConn
}

func NewOAuth2Client(cc *grpc.ClientConn) OAuth2Client {
	return &oAuth2Client{cc}
}

func (c *oAuth2Client) Authorization(ctx context.Context, in *AuthorizationRequest, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/charonrpc.OAuth2/Authorization", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OAuth2Server is the server API for OAuth2 service.
type OAuth2Server interface {
	Authorization(context.Context, *AuthorizationRequest) (*wrappers.StringValue, error)
}

func RegisterOAuth2Server(s *grpc.Server, srv OAuth2Server) {
	s.RegisterService(&_OAuth2_serviceDesc, srv)
}

func _OAuth2_Authorization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OAuth2Server).Authorization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/charonrpc.OAuth2/Authorization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OAuth2Server).Authorization(ctx, req.(*AuthorizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OAuth2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "charonrpc.OAuth2",
	HandlerType: (*OAuth2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorization",
			Handler:    _OAuth2_Authorization_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "charonrpc/oauth2.proto",
}

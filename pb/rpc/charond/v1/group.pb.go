// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/group.proto

package charond

import (
	reflect "reflect"
	sync "sync"

	ntypes "github.com/piotrkowalczuk/ntypes"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy   *ntypes.Int64          `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy   *ntypes.Int64          `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{0}
}

func (x *Group) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Group) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Group) GetCreatedBy() *ntypes.Int64 {
	if x != nil {
		return x.CreatedBy
	}
	return nil
}

func (x *Group) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Group) GetUpdatedBy() *ntypes.Int64 {
	if x != nil {
		return x.UpdatedBy
	}
	return nil
}

type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description *ntypes.String `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{1}
}

func (x *CreateGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateGroupRequest) GetDescription() *ntypes.String {
	if x != nil {
		return x.Description
	}
	return nil
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGroupRequest) Reset() {
	*x = GetGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequest) ProtoMessage() {}

func (x *GetGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{3}
}

func (x *GetGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupResponse) Reset() {
	*x = GetGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResponse) ProtoMessage() {}

func (x *GetGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResponse.ProtoReflect.Descriptor instead.
func (*GetGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{4}
}

func (x *GetGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type ListGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset  *ntypes.Int64 `protobuf:"bytes,100,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit   *ntypes.Int64 `protobuf:"bytes,101,opt,name=limit,proto3" json:"limit,omitempty"`
	OrderBy []*Order      `protobuf:"bytes,102,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{5}
}

func (x *ListGroupsRequest) GetOffset() *ntypes.Int64 {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *ListGroupsRequest) GetLimit() *ntypes.Int64 {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *ListGroupsRequest) GetOrderBy() []*Order {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

type ListGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *ListGroupsResponse) Reset() {
	*x = ListGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsResponse) ProtoMessage() {}

func (x *ListGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{6}
}

func (x *ListGroupsResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ModifyGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *ntypes.String `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description *ntypes.String `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ModifyGroupRequest) Reset() {
	*x = ModifyGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGroupRequest) ProtoMessage() {}

func (x *ModifyGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGroupRequest.ProtoReflect.Descriptor instead.
func (*ModifyGroupRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{8}
}

func (x *ModifyGroupRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ModifyGroupRequest) GetName() *ntypes.String {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ModifyGroupRequest) GetDescription() *ntypes.String {
	if x != nil {
		return x.Description
	}
	return nil
}

type ModifyGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *ModifyGroupResponse) Reset() {
	*x = ModifyGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyGroupResponse) ProtoMessage() {}

func (x *ModifyGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyGroupResponse.ProtoReflect.Descriptor instead.
func (*ModifyGroupResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{9}
}

func (x *ModifyGroupResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type SetGroupPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     int64    `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Permissions []string `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Force tells if permission should be created in case if it does not exists.
	Force bool `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`
}

func (x *SetGroupPermissionsRequest) Reset() {
	*x = SetGroupPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupPermissionsRequest) ProtoMessage() {}

func (x *SetGroupPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupPermissionsRequest.ProtoReflect.Descriptor instead.
func (*SetGroupPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{10}
}

func (x *SetGroupPermissionsRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *SetGroupPermissionsRequest) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *SetGroupPermissionsRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type SetGroupPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created   int64 `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Removed   int64 `protobuf:"varint,2,opt,name=removed,proto3" json:"removed,omitempty"`
	Untouched int64 `protobuf:"varint,3,opt,name=untouched,proto3" json:"untouched,omitempty"`
}

func (x *SetGroupPermissionsResponse) Reset() {
	*x = SetGroupPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGroupPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGroupPermissionsResponse) ProtoMessage() {}

func (x *SetGroupPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGroupPermissionsResponse.ProtoReflect.Descriptor instead.
func (*SetGroupPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{11}
}

func (x *SetGroupPermissionsResponse) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *SetGroupPermissionsResponse) GetRemoved() int64 {
	if x != nil {
		return x.Removed
	}
	return 0
}

func (x *SetGroupPermissionsResponse) GetUntouched() int64 {
	if x != nil {
		return x.Untouched
	}
	return 0
}

type ListGroupPermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListGroupPermissionsRequest) Reset() {
	*x = ListGroupPermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupPermissionsRequest) ProtoMessage() {}

func (x *ListGroupPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{12}
}

func (x *ListGroupPermissionsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGroupPermissionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *ListGroupPermissionsResponse) Reset() {
	*x = ListGroupPermissionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGroupPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupPermissionsResponse) ProtoMessage() {}

func (x *ListGroupPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListGroupPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP(), []int{13}
}

func (x *ListGroupPermissionsResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto protoreflect.FileDescriptor

var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6f,
	0x74, 0x72, 0x6b, 0x6f, 0x77, 0x61, 0x6c, 0x63, 0x7a, 0x75, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x15, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6f, 0x74, 0x72, 0x6b, 0x6f, 0x77, 0x61, 0x6c, 0x63,
	0x7a, 0x75, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f,
	0x02, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x22, 0x5a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x9e, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x66, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x64, 0x22, 0x4a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7a, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x49, 0x0a, 0x13, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x6f, 0x0a, 0x1a,
	0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x6f, 0x0a,
	0x1b, 0x53, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x6e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x22, 0x2d,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32,
	0xd9, 0x05, 0x0a, 0x0c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x12, 0x61, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x12, 0x29, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x51, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x79, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x60, 0x0a, 0x20, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x50,
	0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69,
	0x6f, 0x74, 0x72, 0x6b, 0x6f, 0x77, 0x61, 0x6c, 0x63, 0x7a, 0x75, 0x6b, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescOnce sync.Once
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescData = file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDesc
)

func file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescGZIP() []byte {
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescOnce.Do(func() {
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescData)
	})
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDescData
}

var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_goTypes = []any{
	(*Group)(nil),                        // 0: charon.rpc.charond.v1.Group
	(*CreateGroupRequest)(nil),           // 1: charon.rpc.charond.v1.CreateGroupRequest
	(*CreateGroupResponse)(nil),          // 2: charon.rpc.charond.v1.CreateGroupResponse
	(*GetGroupRequest)(nil),              // 3: charon.rpc.charond.v1.GetGroupRequest
	(*GetGroupResponse)(nil),             // 4: charon.rpc.charond.v1.GetGroupResponse
	(*ListGroupsRequest)(nil),            // 5: charon.rpc.charond.v1.ListGroupsRequest
	(*ListGroupsResponse)(nil),           // 6: charon.rpc.charond.v1.ListGroupsResponse
	(*DeleteGroupRequest)(nil),           // 7: charon.rpc.charond.v1.DeleteGroupRequest
	(*ModifyGroupRequest)(nil),           // 8: charon.rpc.charond.v1.ModifyGroupRequest
	(*ModifyGroupResponse)(nil),          // 9: charon.rpc.charond.v1.ModifyGroupResponse
	(*SetGroupPermissionsRequest)(nil),   // 10: charon.rpc.charond.v1.SetGroupPermissionsRequest
	(*SetGroupPermissionsResponse)(nil),  // 11: charon.rpc.charond.v1.SetGroupPermissionsResponse
	(*ListGroupPermissionsRequest)(nil),  // 12: charon.rpc.charond.v1.ListGroupPermissionsRequest
	(*ListGroupPermissionsResponse)(nil), // 13: charon.rpc.charond.v1.ListGroupPermissionsResponse
	(*timestamppb.Timestamp)(nil),        // 14: google.protobuf.Timestamp
	(*ntypes.Int64)(nil),                 // 15: ntypes.Int64
	(*ntypes.String)(nil),                // 16: ntypes.String
	(*Order)(nil),                        // 17: charon.rpc.charond.v1.Order
	(*wrapperspb.BoolValue)(nil),         // 18: google.protobuf.BoolValue
}
var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_depIdxs = []int32{
	14, // 0: charon.rpc.charond.v1.Group.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: charon.rpc.charond.v1.Group.created_by:type_name -> ntypes.Int64
	14, // 2: charon.rpc.charond.v1.Group.updated_at:type_name -> google.protobuf.Timestamp
	15, // 3: charon.rpc.charond.v1.Group.updated_by:type_name -> ntypes.Int64
	16, // 4: charon.rpc.charond.v1.CreateGroupRequest.description:type_name -> ntypes.String
	0,  // 5: charon.rpc.charond.v1.CreateGroupResponse.group:type_name -> charon.rpc.charond.v1.Group
	0,  // 6: charon.rpc.charond.v1.GetGroupResponse.group:type_name -> charon.rpc.charond.v1.Group
	15, // 7: charon.rpc.charond.v1.ListGroupsRequest.offset:type_name -> ntypes.Int64
	15, // 8: charon.rpc.charond.v1.ListGroupsRequest.limit:type_name -> ntypes.Int64
	17, // 9: charon.rpc.charond.v1.ListGroupsRequest.order_by:type_name -> charon.rpc.charond.v1.Order
	0,  // 10: charon.rpc.charond.v1.ListGroupsResponse.groups:type_name -> charon.rpc.charond.v1.Group
	16, // 11: charon.rpc.charond.v1.ModifyGroupRequest.name:type_name -> ntypes.String
	16, // 12: charon.rpc.charond.v1.ModifyGroupRequest.description:type_name -> ntypes.String
	0,  // 13: charon.rpc.charond.v1.ModifyGroupResponse.group:type_name -> charon.rpc.charond.v1.Group
	1,  // 14: charon.rpc.charond.v1.GroupManager.Create:input_type -> charon.rpc.charond.v1.CreateGroupRequest
	8,  // 15: charon.rpc.charond.v1.GroupManager.Modify:input_type -> charon.rpc.charond.v1.ModifyGroupRequest
	3,  // 16: charon.rpc.charond.v1.GroupManager.Get:input_type -> charon.rpc.charond.v1.GetGroupRequest
	5,  // 17: charon.rpc.charond.v1.GroupManager.List:input_type -> charon.rpc.charond.v1.ListGroupsRequest
	7,  // 18: charon.rpc.charond.v1.GroupManager.Delete:input_type -> charon.rpc.charond.v1.DeleteGroupRequest
	12, // 19: charon.rpc.charond.v1.GroupManager.ListPermissions:input_type -> charon.rpc.charond.v1.ListGroupPermissionsRequest
	10, // 20: charon.rpc.charond.v1.GroupManager.SetPermissions:input_type -> charon.rpc.charond.v1.SetGroupPermissionsRequest
	2,  // 21: charon.rpc.charond.v1.GroupManager.Create:output_type -> charon.rpc.charond.v1.CreateGroupResponse
	9,  // 22: charon.rpc.charond.v1.GroupManager.Modify:output_type -> charon.rpc.charond.v1.ModifyGroupResponse
	4,  // 23: charon.rpc.charond.v1.GroupManager.Get:output_type -> charon.rpc.charond.v1.GetGroupResponse
	6,  // 24: charon.rpc.charond.v1.GroupManager.List:output_type -> charon.rpc.charond.v1.ListGroupsResponse
	18, // 25: charon.rpc.charond.v1.GroupManager.Delete:output_type -> google.protobuf.BoolValue
	13, // 26: charon.rpc.charond.v1.GroupManager.ListPermissions:output_type -> charon.rpc.charond.v1.ListGroupPermissionsResponse
	11, // 27: charon.rpc.charond.v1.GroupManager.SetPermissions:output_type -> charon.rpc.charond.v1.SetGroupPermissionsResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_init() }
func file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_init() {
	if File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto != nil {
		return
	}
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ModifyGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ModifyGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SetGroupPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SetGroupPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupPermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListGroupPermissionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_goTypes,
		DependencyIndexes: file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_depIdxs,
		MessageInfos:      file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_msgTypes,
	}.Build()
	File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto = out.File
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_rawDesc = nil
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_goTypes = nil
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_group_proto_depIdxs = nil
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto

package charond

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Client   string `protobuf:"bytes,3,opt,name=client,proto3" json:"client,omitempty"`
	// Types that are assignable to Strategy:
	//
	//	*LoginRequest_UsernameAndPassword
	//	*LoginRequest_RefreshToken
	Strategy isLoginRequest_Strategy `protobuf_oneof:"strategy"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (m *LoginRequest) GetStrategy() isLoginRequest_Strategy {
	if m != nil {
		return m.Strategy
	}
	return nil
}

func (x *LoginRequest) GetUsernameAndPassword() *UsernameAndPasswordStrategy {
	if x, ok := x.GetStrategy().(*LoginRequest_UsernameAndPassword); ok {
		return x.UsernameAndPassword
	}
	return nil
}

func (x *LoginRequest) GetRefreshToken() *RefreshTokenStrategy {
	if x, ok := x.GetStrategy().(*LoginRequest_RefreshToken); ok {
		return x.RefreshToken
	}
	return nil
}

type isLoginRequest_Strategy interface {
	isLoginRequest_Strategy()
}

type LoginRequest_UsernameAndPassword struct {
	UsernameAndPassword *UsernameAndPasswordStrategy `protobuf:"bytes,11,opt,name=username_and_password,json=usernameAndPassword,proto3,oneof"`
}

type LoginRequest_RefreshToken struct {
	RefreshToken *RefreshTokenStrategy `protobuf:"bytes,12,opt,name=refresh_token,json=refreshToken,proto3,oneof"`
}

func (*LoginRequest_UsernameAndPassword) isLoginRequest_Strategy() {}

func (*LoginRequest_RefreshToken) isLoginRequest_Strategy() {}

type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *LogoutRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type IsAuthenticatedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *IsAuthenticatedRequest) Reset() {
	*x = IsAuthenticatedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAuthenticatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAuthenticatedRequest) ProtoMessage() {}

func (x *IsAuthenticatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAuthenticatedRequest.ProtoReflect.Descriptor instead.
func (*IsAuthenticatedRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *IsAuthenticatedRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type IsGrantedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
}

func (x *IsGrantedRequest) Reset() {
	*x = IsGrantedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsGrantedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsGrantedRequest) ProtoMessage() {}

func (x *IsGrantedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsGrantedRequest.ProtoReflect.Descriptor instead.
func (*IsGrantedRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *IsGrantedRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *IsGrantedRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

type BelongsToRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupId int64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *BelongsToRequest) Reset() {
	*x = BelongsToRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BelongsToRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BelongsToRequest) ProtoMessage() {}

func (x *BelongsToRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BelongsToRequest.ProtoReflect.Descriptor instead.
func (*BelongsToRequest) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{4}
}

func (x *BelongsToRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BelongsToRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type ActorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username    string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName   string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string   `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Permissions []string `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`
	IsSuperuser bool     `protobuf:"varint,6,opt,name=is_superuser,json=isSuperuser,proto3" json:"is_superuser,omitempty"`
	IsActive    bool     `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
	IsStuff     bool `protobuf:"varint,8,opt,name=is_stuff,json=isStuff,proto3" json:"is_stuff,omitempty"`
	IsConfirmed bool `protobuf:"varint,9,opt,name=is_confirmed,json=isConfirmed,proto3" json:"is_confirmed,omitempty"`
	IsStaff     bool `protobuf:"varint,10,opt,name=is_staff,json=isStaff,proto3" json:"is_staff,omitempty"`
}

func (x *ActorResponse) Reset() {
	*x = ActorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorResponse) ProtoMessage() {}

func (x *ActorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorResponse.ProtoReflect.Descriptor instead.
func (*ActorResponse) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{5}
}

func (x *ActorResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActorResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ActorResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ActorResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ActorResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ActorResponse) GetIsSuperuser() bool {
	if x != nil {
		return x.IsSuperuser
	}
	return false
}

func (x *ActorResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

// Deprecated: Marked as deprecated in github.com/piotrkowalczuk/charon/pb/rpc/charond/v1/auth.proto.
func (x *ActorResponse) GetIsStuff() bool {
	if x != nil {
		return x.IsStuff
	}
	return false
}

func (x *ActorResponse) GetIsConfirmed() bool {
	if x != nil {
		return x.IsConfirmed
	}
	return false
}

func (x *ActorResponse) GetIsStaff() bool {
	if x != nil {
		return x.IsStaff
	}
	return false
}

type UsernameAndPasswordStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UsernameAndPasswordStrategy) Reset() {
	*x = UsernameAndPasswordStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernameAndPasswordStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernameAndPasswordStrategy) ProtoMessage() {}

func (x *UsernameAndPasswordStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernameAndPasswordStrategy.ProtoReflect.Descriptor instead.
func (*UsernameAndPasswordStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{6}
}

func (x *UsernameAndPasswordStrategy) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UsernameAndPasswordStrategy) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RefreshTokenStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshTokenStrategy) Reset() {
	*x = RefreshTokenStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenStrategy) ProtoMessage() {}

func (x *RefreshTokenStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenStrategy.ProtoReflect.Descriptor instead.
func (*RefreshTokenStrategy) Descriptor() ([]byte, []int) {
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshTokenStrategy) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

var File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto protoreflect.FileDescriptor

var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6f,
	0x74, 0x72, 0x6b, 0x6f, 0x77, 0x61, 0x6c, 0x63, 0x7a, 0x75, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e,
	0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x15, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x02, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x68, 0x0a, 0x15,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48,
	0x00, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x52, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4a, 0x04, 0x08, 0x0d, 0x10, 0x14, 0x22, 0x32, 0x0a, 0x0d,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x3b, 0x0a, 0x16, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4b, 0x0a,
	0x10, 0x49, 0x73, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x10, 0x42, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d,
	0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x75, 0x66, 0x66, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x75, 0x66, 0x66, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74, 0x61, 0x66, 0x66, 0x22, 0x55, 0x0a, 0x1b, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32,
	0xe9, 0x03, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x4a, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x24,
	0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72,
	0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x0f,
	0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2d, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x49, 0x73, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x73, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x42, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x60, 0x0a, 0x20, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x50,
	0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69,
	0x6f, 0x74, 0x72, 0x6b, 0x6f, 0x77, 0x61, 0x6c, 0x63, 0x7a, 0x75, 0x6b, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x6f,
	0x6e, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x72, 0x6f, 0x6e, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescOnce sync.Once
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescData = file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDesc
)

func file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescGZIP() []byte {
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescOnce.Do(func() {
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescData)
	})
	return file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDescData
}

var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_goTypes = []any{
	(*LoginRequest)(nil),                // 0: charon.rpc.charond.v1.LoginRequest
	(*LogoutRequest)(nil),               // 1: charon.rpc.charond.v1.LogoutRequest
	(*IsAuthenticatedRequest)(nil),      // 2: charon.rpc.charond.v1.IsAuthenticatedRequest
	(*IsGrantedRequest)(nil),            // 3: charon.rpc.charond.v1.IsGrantedRequest
	(*BelongsToRequest)(nil),            // 4: charon.rpc.charond.v1.BelongsToRequest
	(*ActorResponse)(nil),               // 5: charon.rpc.charond.v1.ActorResponse
	(*UsernameAndPasswordStrategy)(nil), // 6: charon.rpc.charond.v1.UsernameAndPasswordStrategy
	(*RefreshTokenStrategy)(nil),        // 7: charon.rpc.charond.v1.RefreshTokenStrategy
	(*wrapperspb.StringValue)(nil),      // 8: google.protobuf.StringValue
	(*emptypb.Empty)(nil),               // 9: google.protobuf.Empty
	(*wrapperspb.BoolValue)(nil),        // 10: google.protobuf.BoolValue
}
var file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_depIdxs = []int32{
	6,  // 0: charon.rpc.charond.v1.LoginRequest.username_and_password:type_name -> charon.rpc.charond.v1.UsernameAndPasswordStrategy
	7,  // 1: charon.rpc.charond.v1.LoginRequest.refresh_token:type_name -> charon.rpc.charond.v1.RefreshTokenStrategy
	0,  // 2: charon.rpc.charond.v1.Auth.Login:input_type -> charon.rpc.charond.v1.LoginRequest
	1,  // 3: charon.rpc.charond.v1.Auth.Logout:input_type -> charon.rpc.charond.v1.LogoutRequest
	2,  // 4: charon.rpc.charond.v1.Auth.IsAuthenticated:input_type -> charon.rpc.charond.v1.IsAuthenticatedRequest
	8,  // 5: charon.rpc.charond.v1.Auth.Actor:input_type -> google.protobuf.StringValue
	3,  // 6: charon.rpc.charond.v1.Auth.IsGranted:input_type -> charon.rpc.charond.v1.IsGrantedRequest
	4,  // 7: charon.rpc.charond.v1.Auth.BelongsTo:input_type -> charon.rpc.charond.v1.BelongsToRequest
	8,  // 8: charon.rpc.charond.v1.Auth.Login:output_type -> google.protobuf.StringValue
	9,  // 9: charon.rpc.charond.v1.Auth.Logout:output_type -> google.protobuf.Empty
	10, // 10: charon.rpc.charond.v1.Auth.IsAuthenticated:output_type -> google.protobuf.BoolValue
	5,  // 11: charon.rpc.charond.v1.Auth.Actor:output_type -> charon.rpc.charond.v1.ActorResponse
	10, // 12: charon.rpc.charond.v1.Auth.IsGranted:output_type -> google.protobuf.BoolValue
	10, // 13: charon.rpc.charond.v1.Auth.BelongsTo:output_type -> google.protobuf.BoolValue
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_init() }
func file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_init() {
	if File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*IsAuthenticatedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*IsGrantedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BelongsToRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ActorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UsernameAndPasswordStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RefreshTokenStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes[0].OneofWrappers = []any{
		(*LoginRequest_UsernameAndPassword)(nil),
		(*LoginRequest_RefreshToken)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_goTypes,
		DependencyIndexes: file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_depIdxs,
		MessageInfos:      file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_msgTypes,
	}.Build()
	File_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto = out.File
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_rawDesc = nil
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_goTypes = nil
	file_github_com_piotrkowalczuk_charon_pb_rpc_charond_v1_auth_proto_depIdxs = nil
}
